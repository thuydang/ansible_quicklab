---
# main.yml tasks file for kvm_network

- name: Stage 2 | KVM Network | Install needed network manager libs
  dnf: name={{ item }} state=installed
  with_items:
    - NetworkManager-glib
    - libnm-qt-devel.x86_64
    - nm-connection-editor.x86_64
    - libsemanage-python
    - policycoreutils-python

- name: Stage 2 | KVM Network | Configure host bridges
  nmcli: type=bridge cname={{item.name}} ifname={{item.name}} ip4={{item.ip4}} gw4={{item.gw4}} state=present
  become: yes
  when: not (shutdown | default('no') | bool)
  with_items:
    - "{{kvm_networks}}"

## if cname exists, nmcli mode is executed instead by nmcli module. This feature is not impelented, so the cname must be removed first. Use *_shutdown.yml playbook.
- name: Stage 2 | KVM Network | Configure tap devices for VMs 
  #debug: msg="VM name - {{ item.0.hostname }} and network ifaces - {{ item.1.name }} tap-{{item.0.hostname}}-{{item.1.name}} owner {{ansible_user_id}} "
  # iface name maxlength 15.
  nmcli: type=tun cname={{item.0.hostname}}-{{item.1.name}} \
    slavetype=bridge master={{item.1.network_name}} \
    owner={{ansible_user_uid}} mode=tap state=present
  when: not (shutdown | default('no') | bool)
  with_subelements: 
    - '{{kvm_guests}}'
    - network_interfaces

- name: Stage 3 | KVM Network | Configure NAT / MASQUERADE 
  # sudo iptables -F
  # sudo iptables -t nat -F
  # # cat <<EOF
  # do_iptables_restore <<EOF
  # *nat
  # :PREROUTING ACCEPT [61:9671]
  # :POSTROUTING ACCEPT [121:7499]
  # :OUTPUT ACCEPT [132:8691]
  # -A POSTROUTING -s $NETWORK/$NETMASK -j MASQUERADE
  # COMMIT
  # # Completed on Fri Aug 24 15:20:25 2007
  # # Generated by iptables-save v1.3.6 on Fri Aug 24 15:20:25 2007
  # *filter
  # :INPUT ACCEPT [1453:976046]
  # :FORWARD ACCEPT [0:0]
  # :OUTPUT ACCEPT [1605:194911]
  # -A INPUT -i $BRIDGE -p tcp -m tcp --dport 67 -j ACCEPT
  # -A INPUT -i $BRIDGE -p udp -m udp --dport 67 -j ACCEPT
  # -A INPUT -i $BRIDGE -p tcp -m tcp --dport 53 -j ACCEPT
  # -A INPUT -i $BRIDGE -p udp -m udp --dport 53 -j ACCEPT
  # -A FORWARD -i $1 -o $1 -j ACCEPT
  # -A FORWARD -s $NETWORK/$NETMASK -i $BRIDGE -j ACCEPT
  # -A FORWARD -d $NETWORK/$NETMASK -o $BRIDGE -m state --state RELATED,ESTABLISHED -j ACCEPT
  # -A FORWARD -o $BRIDGE -j REJECT --reject-with icmp-port-unreachable
  # -A FORWARD -i $BRIDGE -j REJECT --reject-with icmp-port-unreachable
  # COMMIT
  # EOF
  #
  # iptables -t nat -A POSTROUTING -s 192.168.8.0/24 ! -d 192.168.8.0/24  -j MASQUERADE
  # note: only -o br_name not working. need -s ip/mask
  iptables: chain=INPUT jump=ACCEPT
  iptables: chain=OUTPUT jump=ACCEPT
  iptables: table=nat action=append chain=POSTROUTING source={{item.ip4}} jump=MASQUERADE
  iptables: action=append chain=FORWARD source={{item.ip4}} in_interface={{item.name}} jump=ACCEPT
  iptables: action=append chain=FORWARD destination={{item.ip4}} out_interface={{item.name}} jump=ACCEPT
  with_items:
    - "{{kvm_networks}}"

- name: Stage 4 | KVM Network | Configure DNSMASQ
  #dnsmasq --strict-order \
  #--except-interface=lo \
  #--interface=br0 \
  #--listen-address=x.x.x.1 \
  #--bind-interfaces \
  #--dhcp-range=x.x.x.2,x.x.x.200 \
  #--conf-file="" \
  #--pid-file=/var/run/qemu-dnsmasq-br0.pid \
  #--dhcp-leasefile=/var/run/qemu-dnsmasq-br0.leases \
  #--dhcp-no-override \
  #${TFTPROOT:+"--enable-tftp"} \
  #${TFTPROOT:+"--tftp-root=$TFTPROOT"} \
  #${BOOTP:+"--dhcp-boot=$BOOTP"}
  debug: msg="Next DNSMASQ setup..."

###################################
## CLEAN UP
##########################
- name: Stage 2 | KVM Network | REMOVE host bridges
  nmcli: type=bridge cname={{item.name}} ifname={{item.name}} ip4={{item.ip4}} gw4={{item.gw4}} state=absent
  become: yes
  when: (shutdown | default('no') | bool)
  with_items:
    - "{{kvm_networks}}"

- name: Stage 2 | KVM Network | REMOVE tap devices for VMs 
  nmcli: type=tun cname={{item.0.hostname}}-{{item.1.name}} \
    slavetype=bridge master={{item.1.network_name}} \
    owner={{ansible_user_id}} mode=tap state=absent
  when: (shutdown | default('no') | bool)
  with_subelements: 
    - '{{kvm_guests}}'
    - network_interfaces


